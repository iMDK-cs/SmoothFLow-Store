// ุณูุฑูุจุช ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุน Supabase
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function setupSupabaseDatabase() {
  try {
    console.log('๐ ุจุฏุก ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุน Supabase...')
    
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    await prisma.$connect()
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!')
    
    // ุฅูุดุงุก ุงูุฎุฏูุงุช ุงูุฃุณุงุณูุฉ
    const services = [
      {
        title: 'ุชุฌููุน ุฌูุงุฒ ููุจููุชุฑ ูุฎุตุต',
        description: 'ุชุฌููุน ุฌูุงุฒ ููุจููุชุฑ ุญุณุจ ููุงุตูุงุชู ุงููุทููุจุฉ ูุน ุถูุงู ุงูุฌูุฏุฉ',
        basePrice: 200,
        category: 'PC Build',
        image: '/images/services/custom-build.jpg',
        icon: '๐ฅ๏ธ',
        color: '#3B82F6',
        popular: true,
        active: true,
        available: true
      },
      {
        title: 'ุฅุตูุงุญ ุฃุฌูุฒุฉ ุงูููุจููุชุฑ',
        description: 'ุชุดุฎูุต ูุฅุตูุงุญ ูุดุงูู ุงูุฃุฌูุฒุฉ ูุงูุจุฑุงูุฌ ูุน ุถูุงู ุงูุฅุตูุงุญ',
        basePrice: 50,
        category: 'PC Fix',
        image: '/images/services/diagnosis.jpg',
        icon: '๐ง',
        color: '#EF4444',
        popular: true,
        active: true,
        available: true
      },
      {
        title: 'ุชุญุณูู ุงูุฃุฏุงุก',
        description: 'ุชุญุณูู ุณุฑุนุฉ ูุฃุฏุงุก ุฌูุงุฒ ุงูููุจููุชุฑ ูุฅุฒุงูุฉ ุงูุจุฑุงูุฌ ุงูุถุงุฑุฉ',
        basePrice: 80,
        category: 'PC Tweak',
        image: '/images/services/tweak.jpg',
        icon: 'โก',
        color: '#10B981',
        popular: false,
        active: true,
        available: true
      },
      {
        title: 'ุชุญุฏูุซ BIOS',
        description: 'ุชุญุฏูุซ BIOS ุจุฃูุงู ูุชุญุณูู ุงูุฃุฏุงุก ูุงูุงุณุชูุฑุงุฑ',
        basePrice: 30,
        category: 'PC Tweak',
        image: '/images/services/bios-update.jpg',
        icon: '๐ง',
        color: '#8B5CF6',
        popular: false,
        active: true,
        available: true
      },
      {
        title: 'ุชุฑููุจ ูุธุงู ุชุจุฑูุฏ ูุงุฆู',
        description: 'ุชุฑููุจ ูุธุงู ุชุจุฑูุฏ ูุงุฆู ูุชูุฏู ูุชุญุณูู ุงูุฃุฏุงุก',
        basePrice: 150,
        category: 'PC Build',
        image: '/images/services/water-cooling.jpg',
        icon: 'โ๏ธ',
        color: '#06B6D4',
        popular: true,
        active: true,
        available: true
      }
    ]
    
    console.log('๐ ุฅูุดุงุก ุงูุฎุฏูุงุช...')
    
    for (const service of services) {
      const existingService = await prisma.service.findFirst({
        where: { title: service.title }
      })
      
      if (!existingService) {
        await prisma.service.create({ data: service })
        console.log(`โ ุชู ุฅูุดุงุก ุงูุฎุฏูุฉ: ${service.title}`)
      } else {
        console.log(`โน๏ธ ุงูุฎุฏูุฉ ููุฌูุฏุฉ: ${service.title}`)
      }
    }
    
    // ุฅูุดุงุก ุฎูุงุฑุงุช ููุฎุฏูุงุช
    const serviceOptions = [
      {
        serviceTitle: 'ุชุฌููุน ุฌูุงุฒ ููุจููุชุฑ ูุฎุตุต',
        options: [
          { title: 'ูุนุงูุฌ Intel Core i5', description: 'ูุนุงูุฌ ููู ููุฃูุนุงุจ ูุงูุนูู', price: 50 },
          { title: 'ูุนุงูุฌ Intel Core i7', description: 'ูุนุงูุฌ ูุชูุฏู ููุฃุฏุงุก ุงูุนุงูู', price: 100 },
          { title: 'ูุนุงูุฌ Intel Core i9', description: 'ูุนุงูุฌ ุงุญุชุฑุงูู ููุฃุฏุงุก ุงููุชููุฒ', price: 200 },
          { title: 'ูุงุฑุช ุดุงุดุฉ RTX 3060', description: 'ูุงุฑุช ุดุงุดุฉ ููุชุงุฒ ููุฃูุนุงุจ', price: 80 },
          { title: 'ูุงุฑุช ุดุงุดุฉ RTX 4070', description: 'ูุงุฑุช ุดุงุดุฉ ูุชูุฏู ููุฃูุนุงุจ', price: 150 },
          { title: 'ุฐุงูุฑุฉ 16GB RAM', description: 'ุฐุงูุฑุฉ ุนุดูุงุฆูุฉ ุณุฑูุนุฉ', price: 30 },
          { title: 'ุฐุงูุฑุฉ 32GB RAM', description: 'ุฐุงูุฑุฉ ุนุดูุงุฆูุฉ ุนุงููุฉ ุงูุฃุฏุงุก', price: 60 }
        ]
      },
      {
        serviceTitle: 'ุฅุตูุงุญ ุฃุฌูุฒุฉ ุงูููุจููุชุฑ',
        options: [
          { title: 'ุชุดุฎูุต ุดุงูู', description: 'ูุญุต ุดุงูู ูุฌููุน ููููุงุช ุงูุฌูุงุฒ', price: 20 },
          { title: 'ุฅุตูุงุญ ุงูุจุฑุงูุฌ', description: 'ุฅุตูุงุญ ูุดุงูู ุงููุธุงู ูุงูุจุฑุงูุฌ', price: 30 },
          { title: 'ุฅุตูุงุญ ุงูุฃุฌูุฒุฉ', description: 'ุฅุตูุงุญ ุฃู ุงุณุชุจุฏุงู ุงูููููุงุช ุงูุชุงููุฉ', price: 50 }
        ]
      }
    ]
    
    console.log('๐ ุฅูุดุงุก ุฎูุงุฑุงุช ุงูุฎุฏูุงุช...')
    
    for (const serviceOption of serviceOptions) {
      const service = await prisma.service.findFirst({
        where: { title: serviceOption.serviceTitle }
      })
      
      if (service) {
        for (const option of serviceOption.options) {
          const existingOption = await prisma.serviceOption.findFirst({
            where: { 
              serviceId: service.id,
              title: option.title 
            }
          })
          
          if (!existingOption) {
            await prisma.serviceOption.create({
              data: {
                serviceId: service.id,
                title: option.title,
                description: option.description,
                price: option.price
              }
            })
            console.log(`โ ุชู ุฅูุดุงุก ุงูุฎูุงุฑ: ${option.title}`)
          }
        }
      }
    }
    
    console.log('๐ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!')
    console.log('๐ ููููู ุงูุขู ุนุฑุถ ุงูุจูุงูุงุช ูู:')
    console.log('   - Supabase Dashboard: https://supabase.com/dashboard')
    console.log('   - Prisma Studio: npx prisma studio')
    
  } catch (error) {
    console.error('โ ูุดู ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

setupSupabaseDatabase()