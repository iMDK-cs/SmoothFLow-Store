import { NextResponse } from 'next/server'
import { prisma } from '@/lib/prisma'

const services = [
  {
    title: 'ÿ™ÿ±ŸÉŸäÿ® ÿ≠ÿßÿ≥Ÿàÿ® ŸÉÿßŸÖŸÑ',
    description: 'ÿ™ÿ±ŸÉŸäÿ® ÿ≠ÿßÿ≥Ÿàÿ® ŸÉÿßŸÖŸÑ ŸÖÿπ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™ ŸàÿßŸÑÿ®ÿ±ÿßŸÖÿ¨ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©',
    basePrice: 150,
    category: 'assembly',
    image: '/images/services/pc-assembly.jpg',
    icon: 'üñ•Ô∏è',
    color: '#3B82F6',
    popular: true,
    active: true,
    available: true,
    stock: 10
  },
  {
    title: 'ÿµŸäÿßŸÜÿ© ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®',
    description: 'ÿµŸäÿßŸÜÿ© ÿ¥ÿßŸÖŸÑÿ© ŸÑŸÑÿ≠ÿßÿ≥Ÿàÿ® Ÿàÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖŸÉŸàŸÜÿßÿ™',
    basePrice: 80,
    category: 'maintenance',
    image: '/images/services/pc-fix.jpg',
    icon: 'üîß',
    color: '#10B981',
    popular: true,
    active: true,
    available: true,
    stock: 15
  },
  {
    title: 'ÿ™ÿ≥ÿ±Ÿäÿπ ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®',
    description: 'ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ£ÿØÿßÿ° ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ® Ÿàÿ™ÿ≥ÿ±Ÿäÿπ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ',
    basePrice: 60,
    category: 'optimization',
    image: '/images/services/tweak.jpg',
    icon: '‚ö°',
    color: '#F59E0B',
    popular: true,
    active: true,
    available: true,
    stock: 20
  },
  {
    title: 'ÿ™ŸàŸäŸÉ ÿßŸÑÿ®ÿßŸäŸàÿ≥',
    description: 'ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿ®ÿßŸäŸàÿ≥ ŸÑŸÑÿ£ÿØÿßÿ° ÿßŸÑÿ£ŸÖÿ´ŸÑ',
    basePrice: 50,
    category: 'tweaks',
    image: '/images/services/bios-tweak.jpg',
    icon: '‚öôÔ∏è',
    color: '#84CC16',
    popular: true,
    active: true,
    available: true,
    stock: 10
  },
  {
    title: 'ÿ™ŸàŸäŸÉ ÿßŸÑŸàŸäŸÜÿØŸàÿ≤',
    description: 'ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑŸàŸäŸÜÿØŸàÿ≤ ŸÑŸÑÿ£ÿØÿßÿ° ÿßŸÑÿ£ŸÖÿ´ŸÑ',
    basePrice: 40,
    category: 'tweaks',
    image: '/images/services/custom-windows1.jpg',
    icon: 'ü™ü',
    color: '#06B6D4',
    popular: true,
    active: true,
    available: true,
    stock: 12
  },
  {
    title: 'ÿ™ÿ´ÿ®Ÿäÿ™ ŸàŸäŸÜÿØŸàÿ≤ ŸÖÿÆÿµÿµ',
    description: 'ÿ™ÿ´ÿ®Ÿäÿ™ ŸàŸäŸÜÿØŸàÿ≤ ŸÖÿÆÿµÿµ ŸÖÿπ ÿßŸÑÿ™ÿ≠ÿ≥ŸäŸÜÿßÿ™',
    basePrice: 70,
    category: 'installation',
    image: '/images/services/custom-windows.gif',
    icon: 'üíø',
    color: '#8B5CF6',
    popular: true,
    active: true,
    available: true,
    stock: 8
  },
  {
    title: 'ÿ™ŸàŸäŸÉ ÿßŸÑÿßŸÜÿ™ÿ±ŸÜÿ™',
    description: 'ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ≥ÿ±ÿπÿ© ÿßŸÑÿßŸÜÿ™ÿ±ŸÜÿ™ Ÿàÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿ¥ÿ®ŸÉÿ©',
    basePrice: 30,
    category: 'network',
    image: '/images/services/network1.gif',
    icon: 'üåê',
    color: '#14B8A6',
    popular: true,
    active: true,
    available: true,
    stock: 15
  },
  {
    title: 'ŸÉÿ≥ÿ± ÿ≥ÿ±ÿπÿ© ÿßŸÑŸÇŸäÿ±',
    description: 'ÿ±ŸÅÿπ ÿ£ÿØÿßÿ° ŸÉÿ±ÿ™ ÿßŸÑÿ¥ÿßÿ¥ÿ© ÿπÿ®ÿ± ŸÉÿ≥ÿ± ÿßŸÑÿ≥ÿ±ÿπÿ©',
    basePrice: 90,
    category: 'overclocking',
    image: '/images/services/controller-oc.jpg',
    icon: 'üéÆ',
    color: '#EC4899',
    popular: true,
    active: true,
    available: true,
    stock: 6
  },
  {
    title: 'ÿ™ÿ±ŸÉŸäÿ® ŸÜÿ∏ÿßŸÖ ÿ™ÿ®ÿ±ŸäÿØ ŸÖÿßÿ¶Ÿä',
    description: 'ÿ™ÿ±ŸÉŸäÿ® ŸÜÿ∏ÿßŸÖ ÿ™ÿ®ÿ±ŸäÿØ ŸÖÿßÿ¶Ÿä ŸÖÿ™ŸÇÿØŸÖ ŸÑŸÑÿ≠ÿßÿ≥Ÿàÿ®',
    basePrice: 200,
    category: 'cooling',
    image: '/images/services/water-cooling.jpg',
    icon: '‚ùÑÔ∏è',
    color: '#06B6D4',
    popular: false,
    active: true,
    available: true,
    stock: 5
  },
  {
    title: 'ÿ™ÿ±ŸÉŸäÿ® ŸÜÿ∏ÿßŸÖ ÿ™ÿ®ÿ±ŸäÿØ ŸáŸàÿßÿ¶Ÿä',
    description: 'ÿ™ÿ±ŸÉŸäÿ® ŸÜÿ∏ÿßŸÖ ÿ™ÿ®ÿ±ŸäÿØ ŸáŸàÿßÿ¶Ÿä ÿπÿßŸÑŸä ÿßŸÑÿ£ÿØÿßÿ°',
    basePrice: 120,
    category: 'cooling',
    image: '/images/services/air-cooling.jpg',
    icon: 'üå™Ô∏è',
    color: '#8B5CF6',
    popular: false,
    active: true,
    available: true,
    stock: 8
  },
  {
    title: 'ÿ™ÿ≠ÿØŸäÿ´ BIOS',
    description: 'ÿ™ÿ≠ÿØŸäÿ´ BIOS ÿßŸÑÿ£ŸÖ ÿ•ŸÑŸâ ÿ£ÿ≠ÿØÿ´ ÿ•ÿµÿØÿßÿ±',
    basePrice: 40,
    category: 'firmware',
    image: '/images/services/bios-update.jpg',
    icon: 'üíæ',
    color: '#EF4444',
    popular: false,
    active: true,
    available: true,
    stock: 12
  },
  {
    title: 'ÿ™ÿ±ŸÉŸäÿ® ŸÉÿ±ÿ™ ÿ¥ÿßÿ¥ÿ©',
    description: 'ÿ™ÿ±ŸÉŸäÿ® ŸÉÿ±ÿ™ ÿ¥ÿßÿ¥ÿ© ÿ¨ÿØŸäÿØ ŸÖÿπ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ÿπÿ±ŸäŸÅÿßÿ™',
    basePrice: 100,
    category: 'hardware',
    image: '/images/services/gpu-drivers.jpg',
    icon: 'üéÆ',
    color: '#EC4899',
    popular: true,
    active: true,
    available: true,
    stock: 6
  },
  {
    title: 'ÿ™ÿ¥ÿÆŸäÿµ ÿßŸÑÿ£ÿπÿ∑ÿßŸÑ',
    description: 'ÿ™ÿ¥ÿÆŸäÿµ ÿ¥ÿßŸÖŸÑ ŸÑÿ£ÿπÿ∑ÿßŸÑ ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ®',
    basePrice: 30,
    category: 'diagnosis',
    image: '/images/services/diagnosis.jpg',
    icon: 'üîç',
    color: '#F97316',
    popular: true,
    active: true,
    available: true,
    stock: 25
  },
  {
    title: 'ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ¥ÿ®ŸÉÿ©',
    description: 'ÿ•ÿπÿØÿßÿØ Ÿàÿ™ŸÉŸàŸäŸÜ ÿßŸÑÿ¥ÿ®ŸÉÿ© ÿßŸÑŸÖŸÜÿ≤ŸÑŸäÿ©',
    basePrice: 70,
    category: 'network',
    image: '/images/services/Network.jpg',
    icon: 'üåê',
    color: '#14B8A6',
    popular: false,
    active: true,
    available: true,
    stock: 8
  },
  {
    title: 'ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÖÿπÿ¨ŸàŸÜ ÿßŸÑÿ≠ÿ±ÿßÿ±Ÿä',
    description: 'ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÖÿπÿ¨ŸàŸÜ ÿßŸÑÿ≠ÿ±ÿßÿ±Ÿä ŸÑŸÑŸÖÿπÿßŸÑÿ¨',
    basePrice: 25,
    category: 'maintenance',
    image: '/images/services/thermal-paste.jpg',
    icon: 'üå°Ô∏è',
    color: '#F59E0B',
    popular: false,
    active: true,
    available: true,
    stock: 20
  }
]

export async function POST() {
  try {
    console.log('üå± Starting to seed services...')
    
    // Check if services already exist
    const existingServices = await prisma.service.count()
    console.log(`üìä Existing services count: ${existingServices}`)
    
    if (existingServices > 0) {
      return NextResponse.json({ 
        message: 'Services already exist',
        count: existingServices 
      })
    }

    // Add services
    const createdServices = []
    for (const service of services) {
      const createdService = await prisma.service.create({
        data: service
      })
      createdServices.push(createdService)
      console.log(`‚úÖ Created service: ${createdService.title}`)
    }

    console.log(`üéâ Successfully created ${createdServices.length} services`)

    return NextResponse.json({ 
      message: 'Services added successfully',
      count: createdServices.length,
      services: createdServices.map(s => ({ id: s.id, title: s.title }))
    })
    
  } catch (error) {
    console.error('‚ùå Seed services error:', error)
    return NextResponse.json(
      { 
        error: 'Internal server error',
        details: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    )
  }
}